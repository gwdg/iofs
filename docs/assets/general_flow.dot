digraph G {
    // TODO: Use sth more beautiful like tikz
    node [shape=ellipse];
    main [label="MAIN\n-parse into argp-struct"];
    fuse_main [label="fuse_main(fuse_operations)"];
    cache_init [label="cache_init()\n-fill monitor_options_t"];


    main -> fuse_main;
    fuse_main -> cache_init;
    cache_init -> monitor_init;
    cache_init -> fuse_magic;

    subgraph cluster_1 {
    monitor_init [label="monitor_init()\nActually init\n- threads\n- cURL"];
    reporting_thread [label="reporting_thread()"];
    monitor_init -> reporting_thread;
    label = "process #2";
    color=blue
  }

    subgraph cluster_0 {
    style=filled;
    color=lightgrey;
    node [style=filled, color=white];
    fuse_magic [label="FUSE MAGIC\nWait for I/O event"];
    cache_x [label="cache_<IO_OP_NAME>()\n(cache_ is our prefix space)"];
    time_start [label="start timer for metric <IO_OP_NAME>"];
    translate [label="map virtual to actual path"];
    io_op [label="<IO_OP_NAME>()\n(the linux implementation)"];
    time_stop [label="stop timer"]
    fill_buckets [label="fill tracking buckets\nBucket types:\n- scalar for 1D\n hist for distributions"]
    ret [label="return 0 if success else -errno"]
    fuse_magic -> cache_x;
    cache_x -> time_start;
    time_start -> translate;
    translate -> io_op;
    io_op -> time_stop;
    time_stop -> fill_buckets;
    fill_buckets -> ret;
    ret -> fuse_magic;
    label = "process #1";
  }
}
